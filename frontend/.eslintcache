[{"/Users/j/Desktop/swap-old-stuff/frontend/src/containers/index.js":"1","/Users/j/Desktop/swap-old-stuff/frontend/src/containers/User/UserLogin.js":"2","/Users/j/Desktop/swap-old-stuff/frontend/src/routes.js":"3","/Users/j/Desktop/swap-old-stuff/frontend/src/containers/App.js":"4","/Users/j/Desktop/swap-old-stuff/frontend/src/components/Header.js":"5","/Users/j/Desktop/swap-old-stuff/frontend/src/components/ProductItem.js":"6","/Users/j/Desktop/swap-old-stuff/frontend/src/components/Rating.js":"7","/Users/j/Desktop/swap-old-stuff/frontend/src/containers/Product/ProductDetails.js":"8","/Users/j/Desktop/swap-old-stuff/frontend/src/containers/Product/ProductEdit.js":"9","/Users/j/Desktop/swap-old-stuff/frontend/src/containers/Product/ProductCreate.js":"10","/Users/j/Desktop/swap-old-stuff/frontend/src/containers/Home.js":"11","/Users/j/Desktop/swap-old-stuff/frontend/src/containers/RequestTo.js":"12","/Users/j/Desktop/swap-old-stuff/frontend/src/containers/NotFound.js":"13","/Users/j/Desktop/swap-old-stuff/frontend/src/containers/User/UserProfile.js":"14","/Users/j/Desktop/swap-old-stuff/frontend/src/containers/User/UserRegister.js":"15","/Users/j/Desktop/swap-old-stuff/frontend/src/containers/Product/ProductList.js":"16","/Users/j/Desktop/swap-old-stuff/frontend/src/index.js":"17","/Users/j/Desktop/swap-old-stuff/frontend/src/redux/modules/reducer.js":"18","/Users/j/Desktop/swap-old-stuff/frontend/src/redux/modules/product.js":"19","/Users/j/Desktop/swap-old-stuff/frontend/src/components/Footer.js":"20","/Users/j/Desktop/swap-old-stuff/frontend/src/components/index.js":"21","/Users/j/Desktop/swap-old-stuff/frontend/src/redux/modules/user.js":"22","/Users/j/Desktop/swap-old-stuff/frontend/src/utils/convertTime.js":"23","/Users/j/Desktop/swap-old-stuff/frontend/src/redux/store.js":"24","/Users/j/Desktop/swap-old-stuff/frontend/src/components/CommentBox.js":"25","/Users/j/Desktop/swap-old-stuff/frontend/src/components/SearchBox.js":"26","/Users/j/Desktop/swap-old-stuff/frontend/src/components/TradeModal.js":"27","/Users/j/Desktop/swap-old-stuff/frontend/src/components/ImageBox.js":"28","/Users/j/Desktop/swap-old-stuff/frontend/src/redux/modules/transaction.js":"29","/Users/j/Desktop/swap-old-stuff/frontend/src/containers/TransactionList.js":"30"},{"size":759,"mtime":1609379863169,"results":"31","hashOfConfig":"32"},{"size":2285,"mtime":1608601963851,"results":"33","hashOfConfig":"32"},{"size":1326,"mtime":1609379902232,"results":"34","hashOfConfig":"32"},{"size":443,"mtime":1608226920406,"results":"35","hashOfConfig":"32"},{"size":2654,"mtime":1609329679902,"results":"36","hashOfConfig":"32"},{"size":8192,"mtime":1609386045569,"results":"37","hashOfConfig":"32"},{"size":2767,"mtime":1608858710551,"results":"38","hashOfConfig":"32"},{"size":13018,"mtime":1609833153212,"results":"39","hashOfConfig":"32"},{"size":7408,"mtime":1609833165753,"results":"40","hashOfConfig":"32"},{"size":8853,"mtime":1609269824073,"results":"41","hashOfConfig":"32"},{"size":1066,"mtime":1609328028773,"results":"42","hashOfConfig":"32"},{"size":2614,"mtime":1609833268113,"results":"43","hashOfConfig":"32"},{"size":78,"mtime":1609207361849,"results":"44","hashOfConfig":"32"},{"size":8220,"mtime":1609270134011,"results":"45","hashOfConfig":"32"},{"size":3452,"mtime":1609142141018,"results":"46","hashOfConfig":"32"},{"size":2160,"mtime":1609833177858,"results":"47","hashOfConfig":"32"},{"size":304,"mtime":1608282155387,"results":"48","hashOfConfig":"32"},{"size":279,"mtime":1609395094056,"results":"49","hashOfConfig":"32"},{"size":14936,"mtime":1609409796709,"results":"50","hashOfConfig":"32"},{"size":369,"mtime":1608113148433,"results":"51","hashOfConfig":"32"},{"size":170,"mtime":1608173188820,"results":"52","hashOfConfig":"32"},{"size":6478,"mtime":1609149760889,"results":"53","hashOfConfig":"32"},{"size":672,"mtime":1608794109869,"results":"54","hashOfConfig":"32"},{"size":378,"mtime":1608281899977,"results":"55","hashOfConfig":"32"},{"size":4393,"mtime":1608798592360,"results":"56","hashOfConfig":"32"},{"size":1365,"mtime":1609329799181,"results":"57","hashOfConfig":"32"},{"size":3912,"mtime":1609833207938,"results":"58","hashOfConfig":"32"},{"size":597,"mtime":1609833008966,"results":"59","hashOfConfig":"32"},{"size":3676,"mtime":1609395213871,"results":"60","hashOfConfig":"32"},{"size":8006,"mtime":1609412249908,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"132ux2k",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"87"},"/Users/j/Desktop/swap-old-stuff/frontend/src/containers/index.js",[],["133","134"],"/Users/j/Desktop/swap-old-stuff/frontend/src/containers/User/UserLogin.js",[],["135","136"],"/Users/j/Desktop/swap-old-stuff/frontend/src/routes.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/containers/App.js",[],["137","138"],"/Users/j/Desktop/swap-old-stuff/frontend/src/components/Header.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/components/ProductItem.js",[],["139","140"],"/Users/j/Desktop/swap-old-stuff/frontend/src/components/Rating.js",[],["141","142"],"/Users/j/Desktop/swap-old-stuff/frontend/src/containers/Product/ProductDetails.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/containers/Product/ProductEdit.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/containers/Product/ProductCreate.js",[],["143","144"],"/Users/j/Desktop/swap-old-stuff/frontend/src/containers/Home.js",[],["145","146"],"/Users/j/Desktop/swap-old-stuff/frontend/src/containers/RequestTo.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/containers/NotFound.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/containers/User/UserProfile.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/containers/User/UserRegister.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/containers/Product/ProductList.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/index.js",[],["147","148"],"/Users/j/Desktop/swap-old-stuff/frontend/src/redux/modules/reducer.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/redux/modules/product.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/components/Footer.js",[],["149","150"],"/Users/j/Desktop/swap-old-stuff/frontend/src/components/index.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/redux/modules/user.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/utils/convertTime.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/redux/store.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/components/CommentBox.js",["151","152","153"],"import { useEffect, useLayoutEffect, useState } from 'react'\nimport {\n  Alert,\n  Badge,\n  Button,\n  Col,\n  Form,\n  InputGroup,\n  ListGroup,\n  Row,\n  Spinner,\n  Toast,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  createComment,\n  CREATE_COMMENT_RESET,\n  fetchDetails,\n} from '../redux/modules/product'\nimport convertTime from '../utils/convertTime'\n\nexport default function CommentBox(props) {\n  const [isLogin, setIsLogin] = useState(false)\n  // If not login yet\n  const { user: userLogin } = useSelector((s) => s.user.userLogin)\n  useEffect(() => {\n    if (!userLogin || !userLogin._id) {\n      setIsLogin(false)\n    } else {\n      setIsLogin(true)\n    }\n  }, [userLogin])\n\n  // If logged in\n  const [text, setText] = useState('')\n\n  const [show, setShow] = useState(false)\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n  const { error, loading, product } = useSelector(\n    (s) => s.product.productDetails\n  )\n  const productId = props.id\n  const { numComments, comments, createdAt, user: sellerId, username } = product\n\n  const { success } = useSelector((s) => s.product.createComment)\n\n  const commentHandler = (e) => {\n    e.preventDefault()\n\n    if (!text) {\n      setMessage(\"You can't send empty message!\")\n      setShow(true)\n    } else {\n      const comment = {\n        name: userLogin.name,\n        text: text,\n        user: userLogin._id,\n      }\n      dispatch(createComment(productId, comment, numComments + 1))\n    }\n  }\n\n  useLayoutEffect(() => {\n    dispatch(fetchDetails(productId))\n  }, [dispatch, productId])\n\n  useLayoutEffect(() => {\n    if (success) {\n      setText('')\n      dispatch({ type: CREATE_COMMENT_RESET })\n    }\n  }, [dispatch, success])\n\n  return (\n    <>\n      <h3 className='my-2'>BÌNH LUẬN</h3>\n      <Row>\n        <Col lg={6} md={4}>\n          {loading ? (\n            <Spinner animation='border' variant='primary' />\n          ) : error ? (\n            <Alert variant='warning'>{error}</Alert>\n          ) : (\n            <>\n              {numComments ? (\n                <ListGroup variant='flush'>\n                  {comments.map((item) => (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col lg={9}>\n                          {true && (\n                            <Badge\n                              pill\n                              variant='warning'\n                              as='span'\n                              className='text-dark font-weight-bold m-0 p-1'\n                            >\n                              seller\n                            </Badge>\n                          )}\n                          <strong className='ml-1'>{item.name}: </strong>\n                          <span>{item.text}</span>\n                        </Col>\n                        <Col lg={3} className='text-right'>\n                          <small>{convertTime(item.createdAt)}</small>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              ) : (\n                <Alert variant='danger'>\n                  There is no comment. Be the first one by type below.\n                </Alert>\n              )}\n            </>\n          )}\n          {!isLogin ? (\n            <>\n              <Alert variant='info'>Please login to comment!</Alert>\n            </>\n          ) : (\n            <>\n              <Toast\n                onClose={() => setShow(false)}\n                show={show}\n                delay={2000}\n                autohide\n              >\n                <Toast.Header>\n                  <strong className='mr-auto'>{message}</strong>\n                </Toast.Header>\n              </Toast>\n              <Form onSubmit={commentHandler}>\n                <InputGroup className='mb-2 mr-sm-2'>\n                  <Form.Control\n                    id='comment'\n                    placeholder='Bình luận của bạn ...'\n                    value={text}\n                    onChange={({ target: { value } }) => setText(value)}\n                  />\n                  <Button type='submit' className='btn btn-warning ml-1'>\n                    Gửi\n                  </Button>\n                </InputGroup>\n              </Form>\n            </>\n          )}\n        </Col>\n      </Row>\n    </>\n  )\n}\n","/Users/j/Desktop/swap-old-stuff/frontend/src/components/SearchBox.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/components/TradeModal.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/components/ImageBox.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/redux/modules/transaction.js",[],"/Users/j/Desktop/swap-old-stuff/frontend/src/containers/TransactionList.js",["154","155","156","157","158","159"],"import { useEffect, useState } from 'react'\nimport { Alert, Button, Container, Table } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport ImageBox from '../components/ImageBox'\nimport { fetchTransactions } from '../redux/modules/transaction'\n\nexport default function TransactionList() {\n  const [isLogin, setIsLogin] = useState(false)\n  const [successFetch, setSuccessFetch] = useState(false)\n  const { user: userLogin } = useSelector((s) => s.user.userLogin)\n\n  useEffect(() => {\n    if (!userLogin || !userLogin._id) {\n      setIsLogin(false)\n    } else {\n      setIsLogin(true)\n    }\n  }, [userLogin])\n\n  const { loading, success, error, transactions } = useSelector(\n    (s) => s.transaction.fetchTX\n  )\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTransactions())\n  }, [dispatch])\n\n  const cancelTransactionHandler = (e) => {\n    console.log('cancelTransactionHandler...')\n  }\n  return (\n    <>\n      <Link className='btn btn-warning my-2' to='/'>\n        QUAY LẠI\n      </Link>\n      <h3>Your Transaction List</h3>\n\n      {!transactions || !transactions.length ? (\n        <Alert variant='warning'>Bạn chưa có giao dịch nào cả !</Alert>\n      ) : (\n        <>\n          <Table className='table__sm_hide' responsive striped hover>\n            <thead>\n              <tr>\n                <th>Hình</th>\n                <th>Món bị đổi</th>\n                <th>Tình trạng</th>\n                <th>Hình</th>\n                <th>Món bạn muốn</th>\n                <th>Chỉnh sửa</th>\n              </tr>\n            </thead>\n            <tbody>\n              {transactions.map((item, _id) => (\n                <>\n                  <tr>\n                    <td>\n                      <ImageBox\n                        image={\n                          item.buyer.user._id === userLogin._id\n                            ? item.buyer.item.image\n                            : item.seller.item.image\n                        }\n                        height='80px'\n                        width='80px'\n                      />\n                    </td>\n                    <td>\n                      {item.buyer.user._id === userLogin._id\n                        ? item.buyer.item.title\n                        : item.seller.item.title}\n                    </td>\n                    <td>{item.transactionStatus}</td>\n                    <td>\n                      <ImageBox\n                        image={\n                          item.buyer.user._id === userLogin._id\n                            ? item.buyer.item.image\n                            : item.seller.item.image\n                        }\n                        height='80px'\n                        width='80px'\n                      />\n                    </td>\n                    <td>\n                      {item.buyer.user._id === userLogin._id\n                        ? item.buyer.item.title\n                        : item.seller.item.title}\n                    </td>\n                    <td>\n                      <Button\n                        variant='warning'\n                        onClick={cancelTransactionHandler}\n                      >\n                        Hủy\n                      </Button>\n                    </td>\n                  </tr>\n                </>\n              ))}\n              {transactions.map((item, _id) => (\n                <>\n                  <tr>\n                    <td>\n                      <ImageBox\n                        image={\n                          item.buyer.user._id === userLogin._id\n                            ? item.buyer.item.image\n                            : item.seller.item.image\n                        }\n                        height='80px'\n                        width='80px'\n                      />\n                    </td>\n                    <td>\n                      {item.buyer.user._id === userLogin._id\n                        ? item.buyer.item.title\n                        : item.seller.item.title}\n                    </td>\n                    <td>{item.transactionStatus}</td>\n                    <td>\n                      <ImageBox\n                        image={\n                          item.buyer.user._id === userLogin._id\n                            ? item.buyer.item.image\n                            : item.seller.item.image\n                        }\n                        height='80px'\n                        width='80px'\n                      />\n                    </td>\n                    <td>\n                      {item.buyer.user._id === userLogin._id\n                        ? item.buyer.item.image\n                        : item.seller.item.title}\n                    </td>\n                    <td>\n                      <Button\n                        variant='warning'\n                        onClick={cancelTransactionHandler}\n                      >\n                        Hủy\n                      </Button>\n                    </td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </Table>\n        </>\n      )}\n\n      {!transactions || !transactions.length ? (\n        <Alert variant='warning'>Bạn chưa có yêu cầu đổi nào cả !</Alert>\n      ) : (\n        <>\n          {transactions.map((item, _id) => (\n            <Container>\n              <div class='border-bottom table__md_hide'>\n                <div class='row row-cols-xs-2 row-cols-sm-3 row-cols-md-6'>\n                  <div class='col-md-1 mb-2'>\n                    <div class='row'>Image</div>\n                    <div class='row'>\n                      <ImageBox\n                        image={\n                          item.buyer.user._id === userLogin._id\n                            ? item.buyer.item.image\n                            : item.seller.item.image\n                        }\n                        height='80px'\n                        width='80px'\n                      />\n                    </div>\n                  </div>\n                  <div class='col-md-4'>\n                    <div class='row'>Your stuff</div>\n                    <div class='row'>\n                      {item.buyer.user._id === userLogin._id\n                        ? item.buyer.item.title\n                        : item.seller.item.title}{' '}\n                    </div>\n                  </div>\n                  <div class='col-md-1'>\n                    <div class='row'>Status</div>\n                    <div class='row'>{item.transactionStatus}</div>\n                  </div>\n                  <div class='col-md-1'>\n                    <div class='row'>Image</div>\n                    <div class='row'>\n                      <ImageBox\n                        image={\n                          item.buyer.user._id === userLogin._id\n                            ? item.buyer.item.image\n                            : item.seller.item.image\n                        }\n                        height='80px'\n                        width='80px'\n                      />\n                    </div>\n                  </div>\n                  <div class='col-md-4'>\n                    <div class='row'>Your wishlist</div>\n                    <div class='row'>\n                      {item.buyer.user._id === userLogin._id\n                        ? item.buyer.item.title\n                        : item.seller.item.title}\n                    </div>\n                  </div>\n                  <div class='col-md-1'>\n                    <div class='row'>Actions</div>\n                    <div class='row'>\n                      <Button\n                        variant='warning'\n                        onClick={cancelTransactionHandler}\n                      >\n                        Hủy\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Container>\n          ))}\n        </>\n      )}\n    </>\n  )\n}\n",{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"160","replacedBy":"164"},{"ruleId":"162","replacedBy":"165"},{"ruleId":"160","replacedBy":"166"},{"ruleId":"162","replacedBy":"167"},{"ruleId":"160","replacedBy":"168"},{"ruleId":"162","replacedBy":"169"},{"ruleId":"160","replacedBy":"170"},{"ruleId":"162","replacedBy":"171"},{"ruleId":"160","replacedBy":"172"},{"ruleId":"162","replacedBy":"173"},{"ruleId":"160","replacedBy":"174"},{"ruleId":"162","replacedBy":"175"},{"ruleId":"160","replacedBy":"176"},{"ruleId":"162","replacedBy":"177"},{"ruleId":"160","replacedBy":"178"},{"ruleId":"162","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":45,"column":34,"nodeType":"182","messageId":"183","endLine":45,"endColumn":43},{"ruleId":"180","severity":1,"message":"184","line":45,"column":51,"nodeType":"182","messageId":"183","endLine":45,"endColumn":59},{"ruleId":"180","severity":1,"message":"185","line":45,"column":61,"nodeType":"182","messageId":"183","endLine":45,"endColumn":69},{"ruleId":"180","severity":1,"message":"186","line":9,"column":10,"nodeType":"182","messageId":"183","endLine":9,"endColumn":17},{"ruleId":"180","severity":1,"message":"187","line":10,"column":10,"nodeType":"182","messageId":"183","endLine":10,"endColumn":22},{"ruleId":"180","severity":1,"message":"188","line":10,"column":24,"nodeType":"182","messageId":"183","endLine":10,"endColumn":39},{"ruleId":"180","severity":1,"message":"189","line":21,"column":11,"nodeType":"182","messageId":"183","endLine":21,"endColumn":18},{"ruleId":"180","severity":1,"message":"190","line":21,"column":20,"nodeType":"182","messageId":"183","endLine":21,"endColumn":27},{"ruleId":"180","severity":1,"message":"191","line":21,"column":29,"nodeType":"182","messageId":"183","endLine":21,"endColumn":34},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],["192"],["193"],["192"],["193"],["192"],["193"],["192"],["193"],["192"],["193"],["192"],["193"],["192"],["193"],["192"],["193"],"no-unused-vars","'createdAt' is assigned a value but never used.","Identifier","unusedVar","'sellerId' is assigned a value but never used.","'username' is assigned a value but never used.","'isLogin' is assigned a value but never used.","'successFetch' is assigned a value but never used.","'setSuccessFetch' is assigned a value but never used.","'loading' is assigned a value but never used.","'success' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]